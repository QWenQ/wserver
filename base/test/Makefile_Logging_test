TARGET = Logging_test
SOURCES = Logging_test.cpp Logging.cpp LogStream.cpp LogFile.cpp FileUtil.cpp timeUtils.cpp CurrentThread.cpp AsyncLog.cpp Thread.cpp CountDownLatch.cpp
OBJECTS = $(SOURCES:.cpp=.o)

CC = g++

CPPFLAGS = -g -Wall -std=c++2a -lpthread

vpath %.cpp /home/daydayup/wserver : /home/daydayup/wserver/base
vpath %.h /home/daydayup/wserver : /home/daydayup/wserver/base


$(TARGET) : $(OBJECTS)
	$(CC) -o $@ $(OBJECTS) $(CPPFLAGS)
	make -f Makefile_Logging_test cleanAllButTarget

all : $(OBJECTS)

$(OBJECTS) : %.o : %.cpp %.d
	$(CC) -c $(CPPFLAGS) $< -o $@

%.d : %.cpp
	@set -e; rm -rf $@.$$$$; \
	$(CC) -MM $(CPPFLAGS) $< > $@.$$$$; \
	sed 's, \($*\)\.o[ :]*,\1.o $@ : ,g' < $@.$$$$ > $@; \
	rm -rf $@.$$$$

DEPENDENCIES = $(SOURCES:.cpp=.d)
-include $(DEPENDENCIES)

.PHONY : cleanAll cleanTarget cleanObjects cleanDependencies cleanAllButTarget
cleanAll:
	rm -rf $(TARGET) $(DEPENDENCIES) $(OBJECTS)
cleanTarget:
	-rm -rf $(TARGET)
cleanObjects:
	-rm -rf $(OBJECTS)
cleanDependencies:
	-rm -rf $(DEPENDENCIES)
cleanAllButTarget:
	-rm -rf $(DEPENDENCIES) $(OBJECTS)