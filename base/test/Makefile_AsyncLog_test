TARGET = AsyncLog_test

SOURCES = AsyncLog_test.cpp AsyncLog.cpp Logging.cpp LogStream.cpp \
	  LogFile.cpp FileUtil.cpp CurrentThread.cpp timeUtils.cpp \
	  Thread.cpp CountDownLatch.cpp

OBJECTS = $(SOURCES:.cpp=.o)

CC = g++

CPPFLAGS = -g -std=c++2a -Wall -lpthread

vpath %.cpp /home/daydayup/wserver : /home/daydayup/wserver/base
vpath %.h /home/daydayup/wserver : /home/daydayup/wserver/base

$(TARGET) : $(OBJECTS)
	$(CC) -o $@ $(OBJECTS) $(CPPFLAGS)
	make cleanButTarget

all : $(OBJECTS)

$(OBJECTS) : %.o : %.cpp %.d
	$(CC) -c $(CPPFLAGS) $< -o $@

%.d : %.cpp
	@set -e; rm -rf $@.$$$$;\
	$(CC) -MM $(CPPFLAGS) $< > $@.$$$$;\
	sed 's, \($*\)\.o[ :]*,\1.o $@ : ,g' < $@.$$$$ > $@;\
	rm -rf $@.$$$$

DEPENDENCIES = $(SOURCES:.CPP=.d)
-include $(DEPENDENCIES)

.PHONY : cleanAll cleanObjects cleanDependencies cleanAllButTarget
cleanAll :
	-rm -rf $(TARGET) $(OBJECTS) $(DEPENDENCIES)
cleanObjects :
	-rm -rf $(OBJECTS)
cleanDependencies :
	-rm -rf $(DEPENDENCIES)
cleanAllButTarget :
	-rm -rf $(OBJECTS) $(DEPENDENCIES)
